---
- block:

  - block:

    - name: Find name of Stats VM QCOW2 File
      find: path="{{ nuage_unzipped_files_dir }}/vstat"  pattern="*.qcow2" recurse=yes
      register: rc_vstat_file

    - debug: var=rc_vstat_file verbosity=1

    - name: Register VSTAT QCOW2 variables with proper path and image locations for use in other playbooks
      set_fact:
        qcow2_path: "{{ rc_vstat_file.files[0].path | dirname }}"
        qcow2_file_name: "{{ rc_vstat_file.files[0].path | basename }}"
      when: rc_vstat_file.matched > 0

    when: vstats | map(attribute='target_server_type') | list | issuperset(["kvm"])

  - block:

    - name: Find name of Stats VM OVF/OVA File
      find: path="{{ nuage_unzipped_files_dir }}/vstat"  patterns="*.ova,*.ovf" recurse=yes
      register: rc_vstat_file

    - debug: var=rc_vstat_file verbosity=1

    - name: Register VSTAT OVF/OVA variables with proper path and image locations for use in other playbooks
      set_fact:
        ova_path: "{{ rc_vstat_file.files[0].path | dirname }}"
        ova_file_name: "{{ rc_vstat_file.files[0].path | basename }}"
      when: rc_vstat_file.matched > 0

    when: vstats | map(attribute='target_server_type') | list | issuperset(["vcenter"])

  - name: Find name of VSTAT upgrade Package Files (EL7 architecture)
    find: path="{{ nuage_unzipped_files_dir }}/vstat"  pattern="*.bin" recurse=yes
    register: rc_vstat_upgrade_scripts

  - debug: var=rc_vstat_upgrade_scripts verbosity=1

  - name: Register VSTAT upgrade script variables with proper path and script locations for use in other playbooks
    set_fact:
      vstat_upgrade_scripts_path: "{{ rc_vstat_upgrade_scripts.files[0].path | dirname }}/"
      vstat_upgrade_scripts_file: "{{ rc_vstat_upgrade_scripts.files[0].path | basename }}"
    when: rc_vstat_upgrade_scripts.matched > 0

  - name: Verify VSTAT management gateway is in correct IP range
    include_role:
      name: common
      tasks_from: check-ip-in-range.yml
    vars:
      ip_address: "{{ item.mgmt_gateway }}"
      netaddr: "{{ item.mgmt_ip }}"
      netmask: "{{ item.mgmt_ip_prefix }}"
    with_items: "{{ vstats }}"

  - name: Create host_vars files for vstat
    template: src=vstat.j2 backup=no dest={{ inventory_dir }}/host_vars/{{ item.hostname }}
    with_items: "{{ vstats }}"

  when:
    - vstats is defined and vstats
